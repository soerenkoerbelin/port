{"version":3,"sources":["_helper/store.js","RightSide/RightContainer.js","PhotoGallery/PhotoGallery.js","Center/CenterContainer.js","LeftSide/LeftContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","color","font","reducer","state","action","type","payload","Context","React","createContext","RightContainer","useContext","store","dispatch","changeColor","colors","randomHex","Math","floor","random","length","changeFontFamily","fonts","randomFont","useEffect","style","backgroundColor","fontFamily","className","href","aria-hidden","onClick","trackWindowScroll","images","map","image","key","src","alt","CenterContainer","LeftContainer","App","useReducer","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2332a2e5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const initialState = { color: \"\", font: \"\" };\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_COLOR\":\n      return {\n        ...state,\n        color: action.payload,\n      };\n    case \"CHANGE_FONT\":\n      return {\n        ...state,\n        font: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const Context = React.createContext();\n","import React, { useEffect, useContext } from \"react\";\n\nimport { Context } from \"./../_helper/store\";\n\nimport \"./RightContainer.scss\";\n\nfunction RightContainer() {\n  const { store, dispatch } = useContext(Context);\n\n  useEffect(() => {\n    changeColor();\n  }, []);\n\n  useEffect(() => {\n    changeFontFamily();\n  }, []);\n\n  function changeColor() {\n    // const colors = [\"#CDC5B4\", \"#8F857D\", \"#AD343E\", \"#8D99AE\", \"#E53935\"];\n    const colors = [\"#B8D8D8\", \"#7A9E9F\", \"#FF3366\", \"#EF7674\", \"#81A094\"];\n    const randomHex = colors[Math.floor(Math.random() * colors.length)];\n    dispatch({ type: \"CHANGE_COLOR\", payload: randomHex });\n  }\n\n  function changeFontFamily() {\n    const fonts = [\n      \"Comfortaa\",\n      \"Lato\",\n      \"Muli\",\n      \"IBM Plex Mono\",\n      \"Nunito\",\n      \"Ubuntu\",\n    ];\n    const randomFont = fonts[Math.floor(Math.random() * fonts.length)];\n    dispatch({ type: \"CHANGE_FONT\", payload: randomFont });\n  }\n\n  return (\n    <div style={{ backgroundColor: store.color, fontFamily: store.font }}>\n      <div className=\"icons\">\n        <a href=\"mailto:soeren.koerbelin@gmail.com\">\n          <i className=\"fa fa-envelope fa-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <a href=\"https://www.instagram.com/soeren.ko/\">\n          <i className=\"fab fa-instagram fa-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <a href=\"https://github.com/soerenkoerbelin\">\n          <i className=\"fab fa-github fa-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <a href=\"https://www.strava.com/athletes/3492566\">\n          <i className=\"fab fa-strava fa-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/sören-körbelin-b6b1a1142/\">\n          <i className=\"fab fa-linkedin fa-lg\" aria-hidden=\"true\"></i>\n        </a>\n        <span className=\"hex-code pointer\" onClick={() => changeColor()}>\n          {store.color}\n        </span>\n        <span className=\"font-code pointer\" onClick={() => changeFontFamily()}>\n          {store.font}\n        </span>\n        <span className=\"technology\">REACT / CSS GRID</span>\n        <span className=\"copyright\">&copy;2020</span>\n      </div>\n    </div>\n  );\n}\n\nexport default RightContainer;\n","import React, { useEffect } from \"react\";\nimport {\n  LazyLoadImage,\n  trackWindowScroll,\n} from \"react-lazy-load-image-component\";\n\nimport \"./PhotoGallery.scss\";\nimport images from \"./images.json\";\n\nfunction PhotoGallery() {\n  return (\n    <div className=\"gallery\">\n      {images.map((image) => (\n        <LazyLoadImage key={image.src} alt={image.src} src={image.src} />\n      ))}\n    </div>\n  );\n}\n\nexport default trackWindowScroll(PhotoGallery);\n","import React, { useContext } from \"react\";\nimport { Context } from \"./../_helper/store\";\n\nimport PhotoGallery from \"./../PhotoGallery/PhotoGallery\";\n\nimport \"./CenterContainer.scss\";\n\nfunction CenterContainer() {\n  const { store } = useContext(Context);\n  return (\n    <div className=\"center-container\" style={{ fontFamily: store.font }}>\n      <div className=\"top-container\">\n        <h1>\n          ME<span style={{ color: store.color }}>. </span>\n        </h1>\n        <h1>\n          SALUTES<span style={{ color: store.color }}>. </span>YOU\n          <span style={{ color: store.color }}>. </span>\n        </h1>\n        <h1>\n          ACCENTS<span style={{ color: store.color }}>. </span>KISS\n          <span style={{ color: store.color }}>. </span>MINIMALISM\n          <span style={{ color: store.color }}>. </span>\n        </h1>\n      </div>\n      <div\n        className=\"content-container\"\n        style={{ backgroundColor: store.color }}\n      >\n        <div className=\"rotation-wrapper\">\n          <div className=\"headline\">\n            <p className=\"underline uppercase\">I do</p>\n          </div>\n          <div className=\"content\">\n            <ul>\n              <li>Web Developer based in Hamburg</li>\n              <li>Web Development in an Online Marketing Environment</li>\n              <li>\n                Using Java, Spring Boot, Angular, ReactJS, AWS, MongoDB, MYSQL, CI/CD\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"rotation-wrapper\">\n          <div className=\"headline\">\n            <p className=\"underline uppercase\">I learn</p>\n          </div>\n          <div className=\"content\">\n            <ul>\n              <li>MERN stack stuff</li>\n              <li>PWA</li>\n              <li>Photography things</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"rotation-wrapper\">\n          <div className=\"headline\">\n            <p className=\"underline uppercase\">The future</p>\n          </div>\n          <div className=\"content\">\n            <ul>\n              <li>Deepen frontend development using React + Redux </li>\n              <li>Working on a more visual and customer orientated level</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"rotation-wrapper\">\n          <div className=\"headline\">\n            <p className=\"underline uppercase\">Leasure time</p>\n          </div>\n          <div className=\"content\">\n            <ul>\n              <li>Cycling</li>\n              <li>Photography</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <PhotoGallery />\n    </div>\n  );\n}\n\nexport default CenterContainer;\n","import React, { useContext } from \"react\";\n\nimport { Context } from \"./../_helper/store\";\n\nimport \"./LeftContainer.scss\";\n\nfunction LeftContainer() {\n  const { store } = useContext(Context);\n\n  return (\n    <div style={{ backgroundColor: store.color, fontFamily: store.font }}>\n      <h1 className=\"rotate\">SÖREN KÖRBELIN</h1>\n    </div>\n  );\n}\n\nexport default LeftContainer;\n","import React, { useReducer } from \"react\";\nimport \"./App.scss\";\n\nimport RightContainer from \"./RightSide/RightContainer\";\nimport CenterContainer from \"./Center/CenterContainer\";\nimport LeftContainer from \"./LeftSide/LeftContainer\";\n\nimport { Context, initialState, reducer } from \"./_helper/store\";\n\nfunction App() {\n  const [store, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div className=\"App\">\n      <Context.Provider value={{ store, dispatch }}>\n        <LeftContainer></LeftContainer>\n        <CenterContainer></CenterContainer>\n        <RightContainer></RightContainer>\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}